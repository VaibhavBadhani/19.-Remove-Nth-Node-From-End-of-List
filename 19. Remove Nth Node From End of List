/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {

        ListNode slow=head;
        ListNode fast=head;
        for(int i=0;i<n;i++)
        {
            
            if(fast.next==null)
            {
 //if the increment is equal to n that is you need to delete the head of the linked list
                if(i==n-1)
                {
                    head=head.next;
                    return head;
                }
            }
            fast=fast.next;
        }
        while(fast.next != null)
        {
            fast = fast.next;
            slow = slow.next;
        }
        slow.next=slow.next.next;
        return head;
        
    }
}
